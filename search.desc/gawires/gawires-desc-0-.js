searchState.loadedDescShard("gawires", 0, "Parse command-line arguments into <code>Self</code>.\nGenerates the <code>Parser</code> implementation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nParse from <code>std::env::args_os()</code>, exit on error.\nParse from iterator, exit on error.\nParse from <code>std::env::args_os()</code>, return Err on error.\nParse from iterator, return Err on error.\nUpdate from iterator, return Err on error.\nUpdate from iterator, exit on error.\ntrack new file, add tags and other operations.\nCommands related to Assets management\nOperations on branches\nCheckout assets in local workpod from a source like . When …\nCleanup tools for local workpod\nClone a remote workpod locally, it will clone a complete …\nEnum of all possible subcommands\nConnect and sync a Centralized Workpod.\nFilter operations\nInitialize a new local workpod that can be connected to a …\nInstall a Gawire extension in current workpod.\nChange or create content layout for the workpod (This …\nMerge changes between 2 branches or centralized workpods\nPreview and compare different types of asset\nCommands related to Project management\nUsed in a distributed workpod to pull localy changes from …\nUsed in a distributed workpod to push local changes to …\nRebase a branch or a centralized workpod\nRelease checkout assets from local workpod.\nUnstage new assets or changes\nReset workpod assets to an earlier state\nLog and fetch information about local workpod\nWhile used in a distributed workpod this will fetch the …\nUninstall a Gawire extension in current workpod.\nCreate or configure wires.\nCommands to manage workpod, change or create workpod …\nStage all changes in workpod that are not ignored\nCan be use to specify that the checkout must clone the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nStop tracking the assets from a given path\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOption use to specify if a lock should be put on the …\nTracks new file\nSpecific assets or complete directory structure can be …\nAdd a tag to the assets with the given name")