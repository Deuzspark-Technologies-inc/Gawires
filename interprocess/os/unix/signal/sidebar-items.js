initSidebarItems({"constant":[["NUM_REALTIME_SIGNALS","How many real-time signals are supported. Remember that real-time signals start from 0, so this number is higher than the highest possible real-time signal by 1."],["REALTIME_SIGNALS_SUPPORTED","Whether real-time signals are supported at all."]],"enum":[["SetHandlerError","The error produced when setting a signal handler fails."],["SignalHandler","A signal handling method."],["SignalType","All standard signal types as defined in POSIX.1-2001."]],"fn":[["is_valid_rtsignal","Returns `true` if the specified signal is a valid real-time signal value, `false` otherwise."],["send","Sends the specified signal to the specified process. If the specified signal is `None`, no signal is sent and only a privilege check is performed instead."],["send_rt","Sends the specified real-time signal to the specified process. If the specified signal is `None`, no signal is sent and only a privilege check is performed instead."],["send_rt_to_group","Sends the specified real-time signal to the specified process. If the specified signal is `None`, no signal is sent and only a privilege check is performed instead."],["send_to_group","Sends the specified signal to the specified process group. If the specified signal is `None`, no signal is sent and only a privilege check is performed instead."],["set_handler","Installs the specified handler for the specified standard signal, using the default values for the flags."],["set_rthandler","Installs the specified handler for the specified real-time signal, using the default values for the flags."],["set_unsafe_handler","Installs the specified handler for the specified unsafe signal, using the default values for the flags."]],"struct":[["HandlerOptions","Options for installing a signal handler."],["SignalHook","A function which can be used as a signal handler."],["UnknownSignalError","Error type returned when a conversion from `i32`/`u32` to `SignalType` fails."]]});