var searchIndex = JSON.parse('{\
"gawires":{"doc":"","t":[0,5,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,8,24,13,13,13,13,13,11,11,10,11,0,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["cli","main","Add","Branch","Central","Channel","Checkout","Clean","Connect","Filter","Gist","Init","Install","Merge","Opt","Preview","Pull","Push","Rebase","Release","Remove","Reset","Status","StructOpt","StructOpt","Sync","Tag","Uninstall","Wire","Workspace","borrow","borrow_mut","clap","clap","command","eq","fmt","from","from_args","from_args_safe","from_clap","from_clap","from_iter","from_iter_safe","into","ne","parse_args","try_from","try_into","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Branch","Central","Channel","Checkout","Clean","Connect","Filter","Gist","Init","Install","Merge","Preview","Pull","Push","Rebase","Release","Remove","Reset","Status","Sync","Tag","Uninstall","Wire","Workspace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","clone","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lock_assets","ne","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","parse_args","path","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["gawires","","gawires::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gawires::cli::Opt","","","","","","","","","","","","","","","","","","","","","","","","","gawires::cli::commandd":["","","","","","","","","","","","","","","","","","","","","","","","A struct that is converted from command line arguments.","Generates the <code>StructOpt</code> impl.","","","","","","","","Returns <code>clap::App</code> corresponding to the struct.","","","","","","Builds the struct from the command line arguments (…","Builds the struct from the command line arguments (…","Builds the struct from <code>clap::ArgMatches</code>. It’s guaranteed …","","Gets the struct from any iterator such as a <code>Vec</code> of your …","Gets the struct from any iterator such as a <code>Vec</code> of your …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Operations on branches","Commands related to the creation or management of a …","Create and manage channels, channels are used to have …","Checkout assets in local workspace. When assets are …","Cleanup tools for local workspace","Connect and sync a Centralized Workspace.","Filter operations","Operations over local or remote asset’s gist","Initialize a new project workspace","Install a Gawire extensions.","Merge changes between 2 branches or centralized workspaces","Preview and compare different types of asset","Used in a distributed workspace to pull localy changes …","Used in a distributed workspace to push local changes to …","Rebase a branch or a centralized workspace","Release checkout assets from local workspace.","Unstage new assets or changes","Reset workspace assets to an earlier state","Log and fetch information about local workspace","While used in a distributed workspace this will fetch the …","Add or remove tags from assets or project version","Uninstall a Gawire extensions.","Create or configure wires.","Commands to manage workspace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Can be use to specify that the checkout must clone the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Option use to specify if a lock should be put on the …","","","","","","","","","","","","","","","","","","","","","","","","","","Specific assets or complete directory structure can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,2,1,0,1,1,1,2,2,2,1,2,2,1,1,1,1,1,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,28,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,28,28,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,28,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"f":[null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["app",3]],[[],["app",3]],null,[[["opt",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["error",3],["result",4,["error"]]]],[[["argmatches",3]]],[[["argmatches",3]]],[[]],[[],[["error",3],["result",4,["error"]]]],[[]],[[["opt",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],null,[[["checkout",3]],["bool",15]],[[["release",3]],["bool",15]],[[["init",3]],["bool",15]],[[["sync",3]],["bool",15]],[[["status",3]],["bool",15]],[[["channel",3]],["bool",15]],[[["push",3]],["bool",15]],[[["pull",3]],["bool",15]],[[["workspace",3]],["bool",15]],[[["preview",3]],["bool",15]],[[["reset",3]],["bool",15]],[[["remove",3]],["bool",15]],[[["branch",3]],["bool",15]],[[["tag",3]],["bool",15]],[[["wire",3]],["bool",15]],[[["connect",3]],["bool",15]],[[["filter",3]],["bool",15]],[[["rebase",3]],["bool",15]],[[["merge",3]],["bool",15]],[[["clean",3]],["bool",15]],[[["central",3]],["bool",15]],[[["install",3]],["bool",15]],[[["uninstall",3]],["bool",15]],[[["gist",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["checkout",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Opt"],[8,"StructOpt"],[13,"Add"],[13,"Checkout"],[13,"Release"],[13,"Init"],[13,"Sync"],[13,"Status"],[13,"Channel"],[13,"Push"],[13,"Pull"],[13,"Workspace"],[13,"Preview"],[13,"Reset"],[13,"Remove"],[13,"Branch"],[13,"Tag"],[13,"Wire"],[13,"Connect"],[13,"Filter"],[13,"Rebase"],[13,"Merge"],[13,"Clean"],[13,"Central"],[13,"Install"],[13,"Uninstall"],[13,"Gist"],[3,"Checkout"],[3,"Release"],[3,"Init"],[3,"Sync"],[3,"Status"],[3,"Channel"],[3,"Push"],[3,"Pull"],[3,"Workspace"],[3,"Preview"],[3,"Reset"],[3,"Remove"],[3,"Branch"],[3,"Tag"],[3,"Wire"],[3,"Connect"],[3,"Filter"],[3,"Rebase"],[3,"Merge"],[3,"Clean"],[3,"Central"],[3,"Install"],[3,"Uninstall"],[3,"Gist"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};